[
    {
        "name": "blockworks__parse_latest_news",
        "description": "Parse HTML content to extract news article information.\n\nReturns: list: List of dictionaries containing article information with keys:\n        - headline: Article headline text\n        - description: Article description or summary\n        - metadata: Article timestamp in datetime format\n        - url: Full URL to the article\n        - thumbnail: URL of the article's thumbnail image (currently not implemented)",
        "strict": false,
        "parameters": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "HTML content of the news page"
                }
            },
            "required": [
                "content"
            ],
            "additionalProperties": false
        },
        "async": false
    },
    {
        "name": "blockworks__get_latest_news",
        "description": "Fetch the latest news articles from Blockworks.\n\nReturns: list: List of dictionaries containing article information, limited to topk items",
        "strict": false,
        "parameters": {
            "type": "object",
            "properties": {
                "topk": {
                    "type": "number",
                    "description": "Maximum number of articles to return. Defaults to 20"
                }
            },
            "required": [],
            "additionalProperties": false
        },
        "async": false
    },
    {
        "name": "blockworks__get_page_content",
        "description": "Fetch page content using Playwright browser automation with scroll support.\n\nThis method handles infinite scroll pagination by simulating mouse wheel\nevents to load more content. It includes delays between scrolls to allow\nfor content loading.\n\nReturns: str: HTML content of the page after scrolling\n\nRaises:\n    Exception: Any error that occurs during page fetching or scrolling",
        "strict": false,
        "parameters": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "description": "URL to fetch content from"
                }
            },
            "required": [
                "url"
            ],
            "additionalProperties": false
        },
        "async": false
    },
    {
        "name": "theblock__parse_latest_news",
        "description": "Parse HTML content to extract news article information.\n\nReturns: list: List of dictionaries containing article information with keys:\n        - headline: Article headline text\n        - metadata: Article metadata (author, date, etc.)\n        - url: Full URL to the article\n        - thumbnail: URL of the article's thumbnail image",
        "strict": false,
        "parameters": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "HTML content of the news page"
                }
            },
            "required": [
                "content"
            ],
            "additionalProperties": false
        },
        "async": false
    },
    {
        "name": "theblock__get_latest_news",
        "description": "Fetch the latest news articles from TheBlock.\n\nReturns: list: List of dictionaries containing article information",
        "strict": false,
        "parameters": {
            "type": "object",
            "properties": {
                "topk": {
                    "type": "number",
                    "description": "Number of articles to fetch. Defaults to 20"
                }
            },
            "required": [],
            "additionalProperties": false
        },
        "async": false
    },
    {
        "name": "theblock__get_page_content",
        "description": "Fetch page content using Playwright browser automation.\n\nReturns: str: HTML content of the page\n\nRaises:\n    Exception: Any error that occurs during page fetching",
        "strict": false,
        "parameters": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "description": "URL to fetch content from"
                }
            },
            "required": [
                "url"
            ],
            "additionalProperties": false
        },
        "async": false
    },
    {
        "name": "twitterclient__post_tweet",
        "description": "Post a tweet, optionally with media.\n\nReturns: Dict containing tweet information",
        "strict": false,
        "parameters": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "media_urls": {
                    "type": "array"
                }
            },
            "required": [
                "text"
            ],
            "additionalProperties": false
        },
        "async": true
    },
    {
        "name": "twitterclient__search_tweets",
        "description": "Search for tweets matching a query.\n\nReturns: List of matching tweet dictionaries",
        "strict": false,
        "parameters": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string"
                },
                "limit": {
                    "type": "number"
                }
            },
            "required": [
                "query"
            ],
            "additionalProperties": false
        },
        "async": true
    },
    {
        "name": "twitterclient__get_user_tweets",
        "description": "Get recent tweets from a user.\n\nReturns: List of tweet dictionaries",
        "strict": false,
        "parameters": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "limit": {
                    "type": "number"
                }
            },
            "required": [
                "username"
            ],
            "additionalProperties": false
        },
        "async": true
    },
    {
        "name": "twitterclient__get_tweet_details",
        "description": "Get detailed information about a specific tweet.\n\nReturns: Dict containing tweet details",
        "strict": false,
        "parameters": {
            "type": "object",
            "properties": {
                "tweet_id": {
                    "type": "string"
                }
            },
            "required": [
                "tweet_id"
            ],
            "additionalProperties": false
        },
        "async": true
    },
    {
        "name": "twitterclient__monitor_user",
        "description": "Monitor a user's tweets and optionally track metrics over time.\n\nReturns: ",
        "strict": false,
        "parameters": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "callback": {
                    "type": "array"
                },
                "interval": {
                    "type": "number"
                },
                "track_metrics": {
                    "type": "boolean"
                }
            },
            "required": [
                "username"
            ],
            "additionalProperties": false
        },
        "async": true
    },
    {
        "name": "twitterclient__get_user_info",
        "description": "Get detailed information about a Twitter user.\n\nReturns: Dict containing user information",
        "strict": false,
        "parameters": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                }
            },
            "required": [
                "username"
            ],
            "additionalProperties": false
        },
        "async": true
    }
]