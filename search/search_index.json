{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Aizen Documentation \ud83d\ude80 Aizen is a Python package designed for handling agent-based simulations and data analytics. It includes tools for working with blockchain data, financial analytics, and customizable agents for decentralized ecosystems. \ud83d\udcd6 Project Overview Aizen simplifies working with complex data pipelines and decentralized protocols. The project provides: Modular Structure: Separate components for agents , protocols , and data . Docstring Support: Automatically generated documentation using MkDocs and mkdocstrings . Open Source: Contributions welcome via GitHub . \ud83d\udce6 Installation You can install Aizen using pip : pip install aizen \ud83e\uddd1\u200d\ud83d\udcbb Usage Example from aizen.agents import base agent = base . Agent () agent . run () \ud83d\udcda API Reference Explore the available modules in Aizen: Protocols - Core protocol handling modules. Agents - Customizable AI agents. Data Analytics - Tools for analyzing blockchain data. Data News - News analytics modules. VC Portfolio - Tools for visualizing venture capital data. \ud83d\udcc8 Contributing We welcome contributions! To contribute: Fork the repository. Create a feature branch. Submit a pull request. \ud83d\udcde Support For any issues or questions, reach out via: \ud83d\udce7 Email: support@aizen.com \ud83d\udc26 Twitter: @aizen_project Built with \u2764\ufe0f using MkDocs and mkdocstrings.","title":"Home"},{"location":"#aizen-documentation","text":"Aizen is a Python package designed for handling agent-based simulations and data analytics. It includes tools for working with blockchain data, financial analytics, and customizable agents for decentralized ecosystems.","title":"Aizen Documentation \ud83d\ude80"},{"location":"#project-overview","text":"Aizen simplifies working with complex data pipelines and decentralized protocols. The project provides: Modular Structure: Separate components for agents , protocols , and data . Docstring Support: Automatically generated documentation using MkDocs and mkdocstrings . Open Source: Contributions welcome via GitHub .","title":"\ud83d\udcd6 Project Overview"},{"location":"#installation","text":"You can install Aizen using pip : pip install aizen","title":"\ud83d\udce6 Installation"},{"location":"#usage-example","text":"from aizen.agents import base agent = base . Agent () agent . run ()","title":"\ud83e\uddd1\u200d\ud83d\udcbb Usage Example"},{"location":"#api-reference","text":"Explore the available modules in Aizen: Protocols - Core protocol handling modules. Agents - Customizable AI agents. Data Analytics - Tools for analyzing blockchain data. Data News - News analytics modules. VC Portfolio - Tools for visualizing venture capital data.","title":"\ud83d\udcda API Reference"},{"location":"#contributing","text":"We welcome contributions! To contribute: Fork the repository. Create a feature branch. Submit a pull request.","title":"\ud83d\udcc8 Contributing"},{"location":"#support","text":"For any issues or questions, reach out via: \ud83d\udce7 Email: support@aizen.com \ud83d\udc26 Twitter: @aizen_project Built with \u2764\ufe0f using MkDocs and mkdocstrings.","title":"\ud83d\udcde Support"},{"location":"basic/installation/","text":"Installation 1. Basic Installation pip install aizen This installs the core Aizen library along with all essential dependencies using the published package on PyPI. 2. Development Installation (Editable Mode) For contributing or making local modifications to the source code, you can install it directly from the repository using the pyproject.toml file: pip install -e . This installs the package in editable mode, ensuring changes made to the code reflect immediately in your environment. 3. Verifying the Installation You can test your installation by running a simple Python script: from aizen.agents.base import BaseAgent agent = BaseAgent () print ( \"Aizen is ready to go!\" ) 4. Uninstalling To remove Aizen from your system, use: pip uninstall aizen 5. Getting Help If you face any issues during installation or usage, check the documentation or raise an issue on the GitHub repository .","title":"Installation"},{"location":"basic/installation/#installation","text":"","title":"Installation"},{"location":"basic/installation/#1-basic-installation","text":"pip install aizen This installs the core Aizen library along with all essential dependencies using the published package on PyPI.","title":"1. Basic Installation"},{"location":"basic/installation/#2-development-installation-editable-mode","text":"For contributing or making local modifications to the source code, you can install it directly from the repository using the pyproject.toml file: pip install -e . This installs the package in editable mode, ensuring changes made to the code reflect immediately in your environment.","title":"2. Development Installation (Editable Mode)"},{"location":"basic/installation/#3-verifying-the-installation","text":"You can test your installation by running a simple Python script: from aizen.agents.base import BaseAgent agent = BaseAgent () print ( \"Aizen is ready to go!\" )","title":"3. Verifying the Installation"},{"location":"basic/installation/#4-uninstalling","text":"To remove Aizen from your system, use: pip uninstall aizen","title":"4. Uninstalling"},{"location":"basic/installation/#5-getting-help","text":"If you face any issues during installation or usage, check the documentation or raise an issue on the GitHub repository .","title":"5. Getting Help"},{"location":"basic/quickstart/","text":"","title":"Quick Start"}]}