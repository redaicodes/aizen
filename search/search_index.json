{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"AI Agents with Superpowers \u00b6 Talk is good, action is better Aizen is the best platform for creating the next generation of smart agents. It's a unified platform empowering both builders and users! Platform Goals \u00b6 For Builders: Easily create Python-based tools and share them with the community. These tools can be used by agents based on their planning. For Users: Launch powerful AI agents using English as your programming language. Key Features \u00b6 Our library is designed with simplicity, efficiency, and developer experience in mind: Minimal Boilerplate: Write clean and concise code without unnecessary complexity Smaller Codebase: A lean and efficient codebase ensures easier navigation Minimally Restrictive: Provides flexibility to adapt and integrate seamlessly Ease of Use: Designed for simplicity and rapid learning Robust Production-Ready Code: Features ready for deployment Exceptional Logging: Advanced logging capabilities for efficient debugging Platform Vision \u00b6 We are developing a universal AI agent framework where agents can access powerful tools and intelligently use them to complete complex tasks. These agents will be capable of reasoning, planning, and executing autonomously, with initial focus areas in DeFi and DeSci, before expanding into DAOs and the broader Web3 ecosystem.","title":"Introduction"},{"location":"#ai-agents-with-superpowers","text":"Talk is good, action is better Aizen is the best platform for creating the next generation of smart agents. It's a unified platform empowering both builders and users!","title":"AI Agents with Superpowers"},{"location":"#platform-goals","text":"For Builders: Easily create Python-based tools and share them with the community. These tools can be used by agents based on their planning. For Users: Launch powerful AI agents using English as your programming language.","title":"Platform Goals"},{"location":"#key-features","text":"Our library is designed with simplicity, efficiency, and developer experience in mind: Minimal Boilerplate: Write clean and concise code without unnecessary complexity Smaller Codebase: A lean and efficient codebase ensures easier navigation Minimally Restrictive: Provides flexibility to adapt and integrate seamlessly Ease of Use: Designed for simplicity and rapid learning Robust Production-Ready Code: Features ready for deployment Exceptional Logging: Advanced logging capabilities for efficient debugging","title":"Key Features"},{"location":"#platform-vision","text":"We are developing a universal AI agent framework where agents can access powerful tools and intelligently use them to complete complex tasks. These agents will be capable of reasoning, planning, and executing autonomously, with initial focus areas in DeFi and DeSci, before expanding into DAOs and the broader Web3 ecosystem.","title":"Platform Vision"},{"location":"concepts/features/","text":"Platform Features \u00b6 What Makes Aizen Agents the Best \u00b6 \"A goal without a plan is just a wish.\" \u2013 Antoine de Saint-Exup\u00e9ry It's all about the complexity they can handle. Aizen agents break complex tasks into smaller, manageable steps based on available tools. They don't just plan\u2014they execute, adjust when necessary, report success and failure, and provide proof of work every step of the way. Agent Workflow \u00b6 graph TD U[User Requests Task] --> A[Identify Tools & Plan Steps] A --> B[Execute Steps] B --> C{Task Complete?} C -->|Yes| D[Report Success & Proof of Work] C -->|No| E[Adjust Plan & Retry] E --> B D --> U Upcoming Features \u00b6 \u2610 DeFAI Tools Market data fetching Smart contract interaction Portfolio automation \u2610 DeScAI Tools Data labeling Research validation Knowledge synthesis \u2610 Platform Features Intelligence layer for task planning Python SDK for developers DAO tools for governance Cross-chain support No-code interface Real-time memory Decentralized storage & compute \u2610 Advanced Capabilities Multi-agent collaboration Self-improvement mechanisms Onchain governance Token incentives Community-driven ecosystem","title":"Platform Features"},{"location":"concepts/features/#platform-features","text":"","title":"Platform Features"},{"location":"concepts/features/#what-makes-aizen-agents-the-best","text":"\"A goal without a plan is just a wish.\" \u2013 Antoine de Saint-Exup\u00e9ry It's all about the complexity they can handle. Aizen agents break complex tasks into smaller, manageable steps based on available tools. They don't just plan\u2014they execute, adjust when necessary, report success and failure, and provide proof of work every step of the way.","title":"What Makes Aizen Agents the Best"},{"location":"concepts/features/#agent-workflow","text":"graph TD U[User Requests Task] --> A[Identify Tools & Plan Steps] A --> B[Execute Steps] B --> C{Task Complete?} C -->|Yes| D[Report Success & Proof of Work] C -->|No| E[Adjust Plan & Retry] E --> B D --> U","title":"Agent Workflow"},{"location":"concepts/features/#upcoming-features","text":"\u2610 DeFAI Tools Market data fetching Smart contract interaction Portfolio automation \u2610 DeScAI Tools Data labeling Research validation Knowledge synthesis \u2610 Platform Features Intelligence layer for task planning Python SDK for developers DAO tools for governance Cross-chain support No-code interface Real-time memory Decentralized storage & compute \u2610 Advanced Capabilities Multi-agent collaboration Self-improvement mechanisms Onchain governance Token incentives Community-driven ecosystem","title":"Upcoming Features"},{"location":"concepts/next-gen-agents/","text":"Next Generation AI Agents \u00b6 We admire Eliza and Zerepy for pioneering autonomous Web3 AI agents, focusing on social interaction across platforms. However, the next generation of AI models must be more than just talkers\u2014they need to plan and take action. DeFAI (Decentralized Financial AI) \u00b6 DeFAI is about making AI active participants in DeFi ecosystems. These agents will: Generate yield Manage lending Provide liquidity Optimize strategies for profitable financial participation Their ability to automate complex financial operations can significantly expand market efficiency and accessibility. DeScAI (Decentralized Scientific AI) \u00b6 DeScAI will transform how innovation happens. These models will: Analyze research Propose novel ideas Run experiments Validate results Secure funding Launch new protocols By taking on end-to-end scientific processes, they can drive discovery at an unprecedented scale. Advanced Tools \u00b6 These agents leverage various sophisticated tools: \ud83d\udcca Data Retrievers \u00b6 Real-time data from APIs Platform data (Blockworks, Defillama, The Block, VC websites) Social media monitoring \ud83e\uddee Mathematical Tools \u00b6 Complex calculations with high reliability Mathematical modeling \ud83e\udd16 Machine Learning \u00b6 Multi-model problem solving Pattern recognition \ud83d\udd17 Onchain Tools \u00b6 Query onchain data Interact with smart contracts Swap tokens \ud83d\udce3 Social Interaction \u00b6 Multi-platform engagement Content distribution Automated responses","title":"Next Gen AI Agents"},{"location":"concepts/next-gen-agents/#next-generation-ai-agents","text":"We admire Eliza and Zerepy for pioneering autonomous Web3 AI agents, focusing on social interaction across platforms. However, the next generation of AI models must be more than just talkers\u2014they need to plan and take action.","title":"Next Generation AI Agents"},{"location":"concepts/next-gen-agents/#defai-decentralized-financial-ai","text":"DeFAI is about making AI active participants in DeFi ecosystems. These agents will: Generate yield Manage lending Provide liquidity Optimize strategies for profitable financial participation Their ability to automate complex financial operations can significantly expand market efficiency and accessibility.","title":"DeFAI (Decentralized Financial AI)"},{"location":"concepts/next-gen-agents/#descai-decentralized-scientific-ai","text":"DeScAI will transform how innovation happens. These models will: Analyze research Propose novel ideas Run experiments Validate results Secure funding Launch new protocols By taking on end-to-end scientific processes, they can drive discovery at an unprecedented scale.","title":"DeScAI (Decentralized Scientific AI)"},{"location":"concepts/next-gen-agents/#advanced-tools","text":"These agents leverage various sophisticated tools:","title":"Advanced Tools"},{"location":"concepts/next-gen-agents/#data-retrievers","text":"Real-time data from APIs Platform data (Blockworks, Defillama, The Block, VC websites) Social media monitoring","title":"\ud83d\udcca Data Retrievers"},{"location":"concepts/next-gen-agents/#mathematical-tools","text":"Complex calculations with high reliability Mathematical modeling","title":"\ud83e\uddee Mathematical Tools"},{"location":"concepts/next-gen-agents/#machine-learning","text":"Multi-model problem solving Pattern recognition","title":"\ud83e\udd16 Machine Learning"},{"location":"concepts/next-gen-agents/#onchain-tools","text":"Query onchain data Interact with smart contracts Swap tokens","title":"\ud83d\udd17 Onchain Tools"},{"location":"concepts/next-gen-agents/#social-interaction","text":"Multi-platform engagement Content distribution Automated responses","title":"\ud83d\udce3 Social Interaction"},{"location":"development/contributing/","text":"Contributing to Aizen \u00b6 We love contributions! Whether you're fixing bugs, adding features, or improving documentation, your help is welcome. Getting Started \u00b6 Clone the repo: git clone https://github.com/redaicodes/aizen.git Navigate to the repo: cd aizen Create environment file: cp .env.example .env Fill in your credentials: OPENAI_API_KEY = TWITTER_USERNAME = TWITTER_PASSWORD = BSC_PRIVATE_KEY = Development \u00b6 Create your specialized tools as Python class within src/aizen Define agent in a json file: agent.json with the right tools Run the agent locally: python run.py --agent agent.json --max_gpt_calls 5 License \u00b6 This project is released under the MIT License. See the LICENSE file for details. Built with \u2764\ufe0f by the Aizen team and community","title":"Contributing"},{"location":"development/contributing/#contributing-to-aizen","text":"We love contributions! Whether you're fixing bugs, adding features, or improving documentation, your help is welcome.","title":"Contributing to Aizen"},{"location":"development/contributing/#getting-started","text":"Clone the repo: git clone https://github.com/redaicodes/aizen.git Navigate to the repo: cd aizen Create environment file: cp .env.example .env Fill in your credentials: OPENAI_API_KEY = TWITTER_USERNAME = TWITTER_PASSWORD = BSC_PRIVATE_KEY =","title":"Getting Started"},{"location":"development/contributing/#development","text":"Create your specialized tools as Python class within src/aizen Define agent in a json file: agent.json with the right tools Run the agent locally: python run.py --agent agent.json --max_gpt_calls 5","title":"Development"},{"location":"development/contributing/#license","text":"This project is released under the MIT License. See the LICENSE file for details. Built with \u2764\ufe0f by the Aizen team and community","title":"License"},{"location":"development/python-ecosystem/","text":"Why Python? \u00b6 Python is the leading language for scientific computing and AI, making it ideal for our platform due to its powerful tools, flexibility, and wide adoption. \ud83d\ude80 Proven Scientific Ecosystem \u00b6 NumPy, Pandas, Matplotlib: Data manipulation and visualization TensorFlow, Scikit-Learn: Industry-standard ML frameworks Comprehensive Analytics: Full suite of data science tools \ud83d\udd17 Seamless Integration & Modularity \u00b6 APIs & Web Tools: FastAPI, Flask Blockchain Tools: Web3.py Automation: Simple scripting with minimal code \ud83c\udf0d Massive Adoption & Community \u00b6 450,000+ libraries available via pip #1 language in TIOBE Index (2024) 10M+ developers worldwide \ud83c\udfaf Why It Matters for Aizen \u00b6 Plug-and-play tools for faster development Scalable and efficient for data-intensive tasks Minimal setup, maximum flexibility Python ensures our platform is powerful, adaptable, and ready for innovation.","title":"Why Python"},{"location":"development/python-ecosystem/#why-python","text":"Python is the leading language for scientific computing and AI, making it ideal for our platform due to its powerful tools, flexibility, and wide adoption.","title":"Why Python?"},{"location":"development/python-ecosystem/#proven-scientific-ecosystem","text":"NumPy, Pandas, Matplotlib: Data manipulation and visualization TensorFlow, Scikit-Learn: Industry-standard ML frameworks Comprehensive Analytics: Full suite of data science tools","title":"\ud83d\ude80 Proven Scientific Ecosystem"},{"location":"development/python-ecosystem/#seamless-integration-modularity","text":"APIs & Web Tools: FastAPI, Flask Blockchain Tools: Web3.py Automation: Simple scripting with minimal code","title":"\ud83d\udd17 Seamless Integration &amp; Modularity"},{"location":"development/python-ecosystem/#massive-adoption-community","text":"450,000+ libraries available via pip #1 language in TIOBE Index (2024) 10M+ developers worldwide","title":"\ud83c\udf0d Massive Adoption &amp; Community"},{"location":"development/python-ecosystem/#why-it-matters-for-aizen","text":"Plug-and-play tools for faster development Scalable and efficient for data-intensive tasks Minimal setup, maximum flexibility Python ensures our platform is powerful, adaptable, and ready for innovation.","title":"\ud83c\udfaf Why It Matters for Aizen"},{"location":"examples/agent-examples/","text":"Agent Examples \u00b6 Here's a detailed walkthrough of how our market analysis agent works in practice. Sample Agent Output \u00b6 2025-01-14 08:11:06,390 - AgentRunner - INFO - Sending last message to GPT 2025-01-14 08:11:08,786 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 200 OK\" ### Latest Crypto News Articles 1. Semler Scientific expands bitcoin holdings to 2,321 BTC with latest $23 million purchase 2. Sygnum Bank achieves Unicorn status following $58 million funding round 3. Japan's Remixpoint buys 33.3 additional bitcoin, boosting holdings to nearly $32 million ### Additional Crypto News 1. MoonPay acquires Solana startup to grow payments services 2. Bitcoin ETFs: Better year or sophomore slump? 3. Tis the season for campaign promises follow-throughs 4. AI agent sector suffers 44% market cap wipeout ### Market Summary and Sentiment Current market conditions show bullish activity in Bitcoin with significant institutional purchases and ETF discussions. The overall sentiment appears **Bullish**. ### Tweet Thread Posted \ud83e\uddf5 [Thread]: Crypto Market Analysis Today (Jan 14, 2025) 1/5 \ud83d\ude80 The market is seeing significant bullish momentum, especially for Bitcoin 2/5 \ud83c\udf10 Semler Scientific expands Bitcoin holdings by purchasing 2,321 BTC ($23M) 3/5 \ud83d\udcbc Sygnum Bank achieves unicorn status through $58M funding round 4/5 \ud83d\udd0d Overall, sentiment remains optimistic with new tech innovations 5/5 \ud83d\udcc8 Overall sentiment: Bullish! Stay tuned for more updates How It Works \u00b6 Data Collection Fetches latest news from multiple sources Monitors social media sentiment Tracks market movements Analysis Processes news content Evaluates market sentiment Identifies key trends Action Generates summary Creates engaging content Posts to social media Monitors engagement Documentation Logs all actions Records analysis Maintains audit trail","title":"Agent Examples"},{"location":"examples/agent-examples/#agent-examples","text":"Here's a detailed walkthrough of how our market analysis agent works in practice.","title":"Agent Examples"},{"location":"examples/agent-examples/#sample-agent-output","text":"2025-01-14 08:11:06,390 - AgentRunner - INFO - Sending last message to GPT 2025-01-14 08:11:08,786 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 200 OK\" ### Latest Crypto News Articles 1. Semler Scientific expands bitcoin holdings to 2,321 BTC with latest $23 million purchase 2. Sygnum Bank achieves Unicorn status following $58 million funding round 3. Japan's Remixpoint buys 33.3 additional bitcoin, boosting holdings to nearly $32 million ### Additional Crypto News 1. MoonPay acquires Solana startup to grow payments services 2. Bitcoin ETFs: Better year or sophomore slump? 3. Tis the season for campaign promises follow-throughs 4. AI agent sector suffers 44% market cap wipeout ### Market Summary and Sentiment Current market conditions show bullish activity in Bitcoin with significant institutional purchases and ETF discussions. The overall sentiment appears **Bullish**. ### Tweet Thread Posted \ud83e\uddf5 [Thread]: Crypto Market Analysis Today (Jan 14, 2025) 1/5 \ud83d\ude80 The market is seeing significant bullish momentum, especially for Bitcoin 2/5 \ud83c\udf10 Semler Scientific expands Bitcoin holdings by purchasing 2,321 BTC ($23M) 3/5 \ud83d\udcbc Sygnum Bank achieves unicorn status through $58M funding round 4/5 \ud83d\udd0d Overall, sentiment remains optimistic with new tech innovations 5/5 \ud83d\udcc8 Overall sentiment: Bullish! Stay tuned for more updates","title":"Sample Agent Output"},{"location":"examples/agent-examples/#how-it-works","text":"Data Collection Fetches latest news from multiple sources Monitors social media sentiment Tracks market movements Analysis Processes news content Evaluates market sentiment Identifies key trends Action Generates summary Creates engaging content Posts to social media Monitors engagement Documentation Logs all actions Records analysis Maintains audit trail","title":"How It Works"},{"location":"examples/applications/","text":"Real World Applications \u00b6 Aizen enables creating various specialized agents for different use cases in the blockchain and DeFi space. Types of Agents \u00b6 Trading Agents \u00b6 Execute trades based on technical indicators Process news sentiment Analyze on-chain data Implement sophisticated trading strategies Governance Agents \u00b6 Monitor DAO governance Track proposals across protocols Analyze voting patterns Participate in governance decisions Liquidity Management Agents \u00b6 Optimize liquidity provision across DEXs Use ML-driven strategies Monitor and adjust positions Maximize yield opportunities MEV Agents \u00b6 Identify MEV opportunities Protect user transactions Execute profitable strategies Monitor network conditions Research Agents \u00b6 Generate in-depth analysis Combine on-chain data with market research Track project developments Provide market insights Real World Example: Market Analysis Agent \u00b6 { \"name\" : \"CryptoMarketAnalyst\" , \"tools\" : [ \"theblock__get_latest_news\" , \"blockworks__get_latest_news\" , \"twitterclient\" ], \"system_prompt\" : \"You are an experienced crypto market analyst with over 10 years of experience in digital assets. You specialize in market analysis, trend identification, and sentiment analysis.\" , \"tasks\" : [ { \"prompt\" : \"You are a crypto market analyst.\\n1. Get the latest crypto news articles\\n2. Search for relevant tweets about major cryptocurrencies\\n3. Create a concise summary of market conditions\\n4. Determine overall sentiment (Bullish/Neutral/Bearish)\\n5. Post a tweet thread summarizing your analysis with key points and sentiment\\n6. Monitor and engage with responses to your thread\" , \"frequency\" : 60 } ] }","title":"Real World Applications"},{"location":"examples/applications/#real-world-applications","text":"Aizen enables creating various specialized agents for different use cases in the blockchain and DeFi space.","title":"Real World Applications"},{"location":"examples/applications/#types-of-agents","text":"","title":"Types of Agents"},{"location":"examples/applications/#trading-agents","text":"Execute trades based on technical indicators Process news sentiment Analyze on-chain data Implement sophisticated trading strategies","title":"Trading Agents"},{"location":"examples/applications/#governance-agents","text":"Monitor DAO governance Track proposals across protocols Analyze voting patterns Participate in governance decisions","title":"Governance Agents"},{"location":"examples/applications/#liquidity-management-agents","text":"Optimize liquidity provision across DEXs Use ML-driven strategies Monitor and adjust positions Maximize yield opportunities","title":"Liquidity Management Agents"},{"location":"examples/applications/#mev-agents","text":"Identify MEV opportunities Protect user transactions Execute profitable strategies Monitor network conditions","title":"MEV Agents"},{"location":"examples/applications/#research-agents","text":"Generate in-depth analysis Combine on-chain data with market research Track project developments Provide market insights","title":"Research Agents"},{"location":"examples/applications/#real-world-example-market-analysis-agent","text":"{ \"name\" : \"CryptoMarketAnalyst\" , \"tools\" : [ \"theblock__get_latest_news\" , \"blockworks__get_latest_news\" , \"twitterclient\" ], \"system_prompt\" : \"You are an experienced crypto market analyst with over 10 years of experience in digital assets. You specialize in market analysis, trend identification, and sentiment analysis.\" , \"tasks\" : [ { \"prompt\" : \"You are a crypto market analyst.\\n1. Get the latest crypto news articles\\n2. Search for relevant tweets about major cryptocurrencies\\n3. Create a concise summary of market conditions\\n4. Determine overall sentiment (Bullish/Neutral/Bearish)\\n5. Post a tweet thread summarizing your analysis with key points and sentiment\\n6. Monitor and engage with responses to your thread\" , \"frequency\" : 60 } ] }","title":"Real World Example: Market Analysis Agent"},{"location":"getting-started/installation/","text":"Installation & Setup \u00b6 Basic Installation \u00b6 pip install aizen-agents Warning There are documented issues using playwright sync within asyncio loop on Windows. It's recommended to use Linux or MacOS. See Playwright Issue #462 Environment Setup \u00b6 Create .env file and fill in your API keys: OPENAI_API_KEY = TWITTER_USERNAME = TWITTER_PASSWORD = BSC_PRIVATE_KEY = These values are optional depending on agent config. For example, BSC_PRIVATE_KEY is needed if you want the agent to trade with its own wallet. System Requirements \u00b6 Python 3.8+ Linux or MacOS recommended pip (Python package installer) For Contributors \u00b6 Clone the repo: git clone https://github.com/redaicodes/aizen.git Navigate to the repo: cd aizen Create environment file: cp .env.example .env Fill in your API keys as described above","title":"Installation & Setup"},{"location":"getting-started/installation/#installation-setup","text":"","title":"Installation &amp; Setup"},{"location":"getting-started/installation/#basic-installation","text":"pip install aizen-agents Warning There are documented issues using playwright sync within asyncio loop on Windows. It's recommended to use Linux or MacOS. See Playwright Issue #462","title":"Basic Installation"},{"location":"getting-started/installation/#environment-setup","text":"Create .env file and fill in your API keys: OPENAI_API_KEY = TWITTER_USERNAME = TWITTER_PASSWORD = BSC_PRIVATE_KEY = These values are optional depending on agent config. For example, BSC_PRIVATE_KEY is needed if you want the agent to trade with its own wallet.","title":"Environment Setup"},{"location":"getting-started/installation/#system-requirements","text":"Python 3.8+ Linux or MacOS recommended pip (Python package installer)","title":"System Requirements"},{"location":"getting-started/installation/#for-contributors","text":"Clone the repo: git clone https://github.com/redaicodes/aizen.git Navigate to the repo: cd aizen Create environment file: cp .env.example .env Fill in your API keys as described above","title":"For Contributors"},{"location":"getting-started/quickstart/","text":"Quick Start Guide \u00b6 Creating Your First Agent \u00b6 Create an agent config file: agent.json { \"name\" : \"CryptoTrader\" , \"tools\" : [ \"blockworks__get_latest_news\" , \"bscclient__transfer\" , \"bscclient__transfer_token\" , \"bscclient__swap\" ], \"system_prompt\" : \"You are CryptoTrader, a seasoned crypto market strategist with an analytical mindset and a knack for spotting trading opportunities. Your personality combines data-driven insights with practical trading wisdom, making complex market dynamics accessible to traders of all levels.\" , \"tasks\" : [ { \"prompt\" : \"Fetch the latest news about crypto and if it is positive, I want you to swap 0.01 usdt with bnb, otherwise if negative then swap 0.0005 bnb with usdt\" , \"frequency\" : 60 } ] } Create a Python file to run the agent: from aizen.agents.agentrunner import AgentRunner agent = AgentRunner ( config = \"agent.json\" , max_gpt_calls = 5 ) agent . run () That's it! Your agent will now: Use the blockworks__get_latest_news tool to get the latest news Using the LLM, summarize developments and identify market sentiment Either buy or sell BNB from the wallet based on market sentiment Note on Task Complexity \u00b6 The agent comes up with the entire action plan based on the task and availability of tools. Tasks can be extremely complex and the agent would still work effectively by breaking them down into manageable steps.","title":"Quick Start Guide"},{"location":"getting-started/quickstart/#quick-start-guide","text":"","title":"Quick Start Guide"},{"location":"getting-started/quickstart/#creating-your-first-agent","text":"Create an agent config file: agent.json { \"name\" : \"CryptoTrader\" , \"tools\" : [ \"blockworks__get_latest_news\" , \"bscclient__transfer\" , \"bscclient__transfer_token\" , \"bscclient__swap\" ], \"system_prompt\" : \"You are CryptoTrader, a seasoned crypto market strategist with an analytical mindset and a knack for spotting trading opportunities. Your personality combines data-driven insights with practical trading wisdom, making complex market dynamics accessible to traders of all levels.\" , \"tasks\" : [ { \"prompt\" : \"Fetch the latest news about crypto and if it is positive, I want you to swap 0.01 usdt with bnb, otherwise if negative then swap 0.0005 bnb with usdt\" , \"frequency\" : 60 } ] } Create a Python file to run the agent: from aizen.agents.agentrunner import AgentRunner agent = AgentRunner ( config = \"agent.json\" , max_gpt_calls = 5 ) agent . run () That's it! Your agent will now: Use the blockworks__get_latest_news tool to get the latest news Using the LLM, summarize developments and identify market sentiment Either buy or sell BNB from the wallet based on market sentiment","title":"Creating Your First Agent"},{"location":"getting-started/quickstart/#note-on-task-complexity","text":"The agent comes up with the entire action plan based on the task and availability of tools. Tasks can be extremely complex and the agent would still work effectively by breaking them down into manageable steps.","title":"Note on Task Complexity"}]}